package ru.casino.mrtm;

import java.util.*; //Импортируем библиотеку со сканером, рандомом

class Roulette {
    //Переменные экземпляра
    private int whereItFellOut; //Отвечает за номер сектора, который нам выпадет
    private String color; //Отвечает за цвет сектора, который нам выпадет
    private int bet; //Стоимость в уие нашей одной ставки, вводится игроком
    private int amountWon; //Сумма нашего выигрыша в уие
    String predictedColor; //Обозначает цвет, на который мы ставим в методе colorPlay()
    private final Random casinoBackWork = new Random(); //Генератор рандомных чисел, на котором почти всё держится
    private final Scanner typing = new Scanner(System.in); //Сканер для ввода текста пользователем

    //Методы
    void welcomeMessage() { //Выводим игроку всю необходимую информацию о предстоящей игре
        System.out.println("""
                \s
                Рулетка\s
                \s
                В данном игровом режиме вам необходимо ставить и выигрывать! \s
                Пред вами вращающееся колесо с 36 секторами красного и чёрного цветов и\s
                37-м зелёным сектором «зеро» с обозначением нуля. \s
                Делайте ставки на выпадение шарика на цвет, на чётное или нечётное число, на диапазон или на конкретное число. \s
                """);
    }

    int placeBet() {
        //Начинаем с того, что интересуемся, на что игрок планирует ставить и сколько он ставит.
        //Получаем на вход сумму денег пользователя.
        System.out.println("Введите сумму вашей ставки в уие"); //Просим игрока ввести сумму
        System.out.print(">>>");//Указываем место ввода, строка служит в качестве "украшения"
        bet = Math.abs(typing.nextInt()); //Сканер считывает числовое значение в переменную, если число меньше нуля, то мы берём абсолютное значение
        //Далее выводим следующее сообщение с информацией о том, на что ставить
        System.out.println("""
                \s
                Выберите то, на что вы будете ставить! \s
                У вас есть следующие варианты: \s
                | На определённый цвет \s
                    >>>Цвет\s
                | На чётное число \s
                    >>>Чётное\s
                | На нечётное число \s
                    >>>Нечётное\s
                | На диапазон \s
                    >>>Диапазон\s
                | На конкретное число \s
                    >>>Число\s
                """);
        enter(); //Метод, который реализует ввод и перенаправление на соответственный метод
        return amountWon - bet; //Возвращает деньги игрока после снятия стоимости ставка
    }

    private void enter() {
        //Для выбора игроком, на что будут ставки. Каждый кейс выводит на соответствующий метод.
        //Bet - сумма, которую ставит игрок
        System.out.print(">>>");//Отображаем, куда вписывать, просто "прикольно"
        switch (typing.next()) { //Внутри скобок switch() устанавливаем ввод с консоли
            //Соответствующий ввод переносит игрока в метод, нацеленный на выбранную ситуацию
            case "Цвет" -> colorPlay();
            case "Чётное" -> oddPlay();
            case "Нечётное" -> notOddPlay();
            case "Диапазон" -> rangePlay();
            case "Число" -> numberPlay();
            default -> {
                System.out.println("Вы ошибочно ввели название! Попробуйте ещё раз !"); //Сообщение об ошибке
                enter(); //Переходим снова к методу
            }
        }
    }

    private void gameProcess() { //Метод, который отвечает за суть - выпадение случайного сектора
        whereItFellOut = casinoBackWork.nextInt(0, 37); //Номер сектора куда попадает мяч, 0 включено, 37 не включено
        color = colorDefinition(whereItFellOut); //Выясняем цвет мяча
        System.out.println("\nВам выпало " + whereItFellOut + " " + color); //Выводим информацию о выпавшем
    }

    private String colorDefinition(int where) {
        //Определяем цвет мяча, в зависимости от диапазона сектора и его чётности
        //Внизу предоставлена таблица с цветами
        /*
            Цвета и номера
            КРАСНОЕ ЧЁРНОЕ  ЗЕЛЁНОЕ
            1     2       0
            3     4
            5     6
            7     8
            9     10
            12    11
            14    13
            16    15
            18    17
            19    20
            21    22
            23    24
            25    26
            27    28
            30    29
            32    31
            34    33
            36    35
 */
        if ((1 <= where & where <= 10) || (19 <= where & where <= 28)) {
            if (where % 2 == 0) return "Чёрное";
            else return "Красное";
        }
        if ((11 <= where & where <= 18) || (29 <= where & where <= 36)) {
            if (where % 2 == 0) return "Красное";
            else return "Чёрное";
        }
        return "Зелёное";
    }

    private void colorPlay() { //Ставка на цвет
        System.out.println("""
                Введите цвет, на который вы ставите!\s
                >>>Красное\s
                >>>Чёрное\s
                >>>Зелёное\s
                """); //Вывод соответствующего сообщения
        System.out.print(">>>");//Отображаем, куда вписывать
        predictedColor = typing.next(); //Ввод цвета для метода

        gameProcess(); //Запускаем рулетку
        if (predictedColor.equals(color)) { //Если цвет, который мы ввели равен тому что выпал
            System.out.println("Ваша ставка сыграла!"); //Уведомляем
            amountWon = bet * 5 + 10; //Подсчёт выигрыша для красного и черного
            System.out.println("Ваш выигрыш " + amountWon); //Уведомляем
        }
        //Если цвет, который мы ввели не равен тому что выпал
        if (!predictedColor.equals(color)) System.out.println("Ваша ставка не сыграла!"); //Уведомляем

        //Если цвет, который мы ввели равен тому что выпал да ещё оно зелёное
        if (predictedColor.equals(color) & color.equals("Зелёное"))
            amountWon = bet * 50 + 1000; //Подсчёт выигрыша особого случая
    }

    private void oddPlay() { //Ставка на чётность числа
        System.out.println("Вы поставили на то, что выпадет чётное!");//Вывод соответствующего сообщения
        gameProcess(); //Запускаем рулетку
        if (whereItFellOut % 2 == 0) { //Если делится на 2 без остатка
            amountWon = bet * 15 + 50;//Подсчёт выигрыша
            System.out.println("Ваша ставка сыграла! Ваш выигрыш " + amountWon); //Уведомляем
        }
        //Вывод соответствующего сообщения, если нам выпало нечётное
        if (whereItFellOut % 2 != 0) System.out.println("Ваша ставка не сыграла! :("); //Уведомляем

    }

    private void notOddPlay() { //Ставка на нечётность числа
        System.out.println("Вы поставили на то, что выпадет нечётное!");//Вывод соответствующего сообщения
        gameProcess(); //Запускаем рулетку
        if (whereItFellOut % 2 != 0) { //Если делится на 2 с остатком
            amountWon = bet * 15 + 50;//Подсчёт выигрыша
            System.out.println("Ваша ставка сыграла! Ваш выигрыш " + amountWon);//Вывод соответствующего сообщения
        }
        if (whereItFellOut % 2 == 0) System.out.println("Ваша ставка не сыграла! :(");
        //Вывод соответствующего сообщения, если нам выпало чётное
    }

    private void rangePlay() { //Ставка на диапазон
        System.out.println("Введите диапазон, на который вы ставите"); //Уведомление
        System.out.print("Начало диапазона >>>");//Отображаем, куда вписывать
        byte stRange = typing.nextByte(); //Ввод
        System.out.print("\nКонец диапазона >>>");//Отображаем, куда вписывать
        byte enRange = typing.nextByte(); //Ввод

        if (enRange > 36 || stRange < 0) {
            //Защита от "дурака"
            //Нужно чтобы диапазон был от 0 по 36
            System.out.println("Вы ввели неправильный диапазон");
            rangePlay(); //Возвращаемся
        }

        gameProcess(); //Запускаем рулетку

        //Если выпавшее число внутри нашего диапазона, и оно в пределах от 0 по 36
        if ((whereItFellOut <= enRange & whereItFellOut >= stRange) & (enRange <= 36 || stRange >= 0)) {
            //Случай, когда диапазон содержит не более 5 чисел
            if (enRange - stRange <= 5) amountWon = bet * bet * 20 + 10; //Выигрыш большой
                //Случай, когда диапазон содержит от 5 до 10
            else if (enRange - stRange > 5 & enRange - stRange <= 10) amountWon = bet * 20 + 5; //Выигрыш средний
            else amountWon = bet + bet; //Выигрыш маленький
            System.out.println("Ваша ставка сыграла! Ваш выигрыш " + amountWon); //Уведомление
        }
        //Случай, когда мы не угадали
        else System.out.println("Вам не повезло! Ничего страшного, получится в следующий раз!");
    }

    private void numberPlay() { //Ставка на конкретное число
        System.out.println("Введите число на которое вы ставите");
        System.out.print("Число >>>");//Отображаем, куда вписывать
        int predictedNumber = typing.nextInt(); //Обозначает число, на который мы ставим в методе numberPlay()

        gameProcess(); //Запускаем рулетку

        if (predictedNumber == whereItFellOut) {
            amountWon = bet * 1000 + 5000;
            System.out.println("Ваша ставка сыграла. Ваша ставка " + amountWon);
        }
        if (predictedNumber != whereItFellOut) {
            System.out.println("Ваша ставка не сыграла :(");
        }
    }
}